name: Build and Release

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '.github/**'
      - '*.md'
      - '.gitignore'
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '.github/**'
      - '*.md'
      - '.gitignore'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
        
    - name: Install Python dependencies
      run: make install-deps
      
    - name: Build extension
      run: make build
      
    - name: Create package
      run: make package
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: chrome-proxy-manager-build
        path: build/
        retention-days: 30
        
    - name: Upload package artifact
      uses: actions/upload-artifact@v4
      with:
        name: chrome-proxy-manager-package
        path: build/*.zip
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
        
    - name: Build and create release
      run: make release
      
    - name: Get package info
      id: package
      run: |
        PACKAGE_NAME=$(ls build/*.zip | head -1 | xargs basename)
        echo "name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
        echo "path=build/$PACKAGE_NAME" >> $GITHUB_OUTPUT
        
    - name: Extract version from tag
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Extract changelog for version
      id: changelog
      run: |
        VERSION="${GITHUB_REF#refs/tags/v}"
        echo "Extracting changelog for version $VERSION"
        
        # Extract changelog section for this version
        CHANGELOG_CONTENT=$(awk -v version="$VERSION" '
          /^## \[/ {
            if ($0 ~ "\\[" version "\\]") {
              found = 1
              next
            } else if (found) {
              exit
            }
          }
          found && /^## \[/ { exit }
          found { print }
        ' CHANGELOG.md | sed '/^$/d' | head -50)
        
        if [ -z "$CHANGELOG_CONTENT" ]; then
          echo "No changelog found for version $VERSION"
          CHANGELOG_CONTENT="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ CHANGELOG.md"
        fi
        
        # Save to file to handle multiline content
        echo "$CHANGELOG_CONTENT" > changelog_excerpt.md
        echo "content<<EOF" >> $GITHUB_OUTPUT
        cat changelog_excerpt.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      
    - name: Create Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Chrome Proxy Manager ${{ steps.version.outputs.version }}
        body: |
          ## üöÄ Chrome Proxy Manager ${{ steps.version.outputs.version }}
          
          ${{ steps.changelog.outputs.content }}
          
          ---
          
          ### üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞
          1. –°–∫–∞—á–∞–π—Ç–µ —Ñ–∞–π–ª `${{ steps.package.outputs.name }}`
          2. –†–∞—Å–ø–∞–∫—É–π—Ç–µ –∞—Ä—Ö–∏–≤
          3. –û—Ç–∫—Ä–æ–π—Ç–µ Chrome –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ `chrome://extensions/`
          4. –í–∫–ª—é—á–∏—Ç–µ "–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞"
          5. –ù–∞–∂–º–∏—Ç–µ "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ"
          6. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω—É—é –ø–∞–ø–∫—É
          
          ### ‚ú® –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
          - üåê –ë—ã—Å—Ç—Ä–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤
          - üîí –ü–æ–¥–¥–µ—Ä–∂–∫–∞ HTTP/HTTPS –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤
          - üåç DNS –∑–∞–ø—Ä–æ—Å—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
          - üìù –°–ø–∏—Å–∫–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
          - üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
          - üåê –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä—É—Å—Å–∫–æ–≥–æ –∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–æ–≤
          
          ---
          **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–±–æ—Ä–∫–∞ —á–µ—Ä–µ–∑ GitHub Actions**
        files: ${{ steps.package.outputs.path }}
        draft: false
        prerelease: false 